{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/animatortransientview\/animation","title":"var animation: AnimatorTransientView.Properties","type":"property"},{"path":"\/documentation\/navigationtransitions\/animatortransientview\/completion","title":"var completion: AnimatorTransientView.Properties","type":"property"},{"path":"\/documentation\/navigationtransitions\/animatortransientview\/initial","title":"var initial: AnimatorTransientView.Properties","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/animatortransientview\/subscript(dynamicmember:)","title":"subscript<T>(dynamicMember _: KeyPath<UIView, T>) -> T","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/animatortransientview\/properties","title":"AnimatorTransientView.Properties","type":"typealias"}],"path":"\/documentation\/navigationtransitions\/animatortransientview","title":"AnimatorTransientView","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/navigationtransitions\/animator\/addanimations(_:)-9gffk","title":"func addAnimations(() -> Void)","type":"method"}],"title":"Animator Implementations","type":"groupMarker"}],"path":"\/documentation\/navigationtransitions\/animator\/addanimations(_:)-4wll6","title":"func addAnimations(() -> Void)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/navigationtransitions\/animator\/addcompletion(_:)-2eoa8","title":"func addCompletion((UIViewAnimatingPosition) -> Void)","type":"method"}],"title":"Animator Implementations","type":"groupMarker"}],"path":"\/documentation\/navigationtransitions\/animator\/addcompletion(_:)-1zx9v","title":"func addCompletion((UIViewAnimatingPosition) -> Void)","type":"method"}],"path":"\/documentation\/navigationtransitions\/animator","title":"Animator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/atomictransition\/transition(_:for:in:)","title":"func transition(Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/atomictransition\/container","title":"AtomicTransition.Container","type":"typealias"},{"path":"\/documentation\/navigationtransitions\/atomictransition\/transientview","title":"AtomicTransition.TransientView","type":"typealias"},{"path":"\/documentation\/navigationtransitions\/atomictransition\/transitionoperation","title":"AtomicTransition.TransitionOperation","type":"typealias"}],"path":"\/documentation\/navigationtransitions\/atomictransition","title":"AtomicTransition","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorableatomictransition\/mirrored","title":"Mirrored","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorableatomictransition\/mirrored()","title":"func mirrored() -> Self.Mirrored","type":"method"}],"path":"\/documentation\/navigationtransitions\/mirrorableatomictransition","title":"MirrorableAtomicTransition","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/navigationtransitions\/navigationtransition\/body-swift.property-5rq1z","title":"var body: Self.Body","type":"property"}],"title":"NavigationTransition Implementations","type":"groupMarker"}],"path":"\/documentation\/navigationtransitions\/navigationtransition\/body-swift.property-76amf","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/navigationtransitions\/navigationtransition\/transition(from:to:for:in:)-22zdm","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"}],"title":"NavigationTransition Implementations","type":"groupMarker"}],"path":"\/documentation\/navigationtransitions\/navigationtransition\/transition(from:to:for:in:)-211yh","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationtransition\/body-swift.typealias","title":"NavigationTransition.Body","type":"typealias"},{"path":"\/documentation\/navigationtransitions\/navigationtransition\/container","title":"NavigationTransition.Container","type":"typealias"},{"path":"\/documentation\/navigationtransitions\/navigationtransition\/transientview","title":"NavigationTransition.TransientView","type":"typealias"},{"path":"\/documentation\/navigationtransitions\/navigationtransition\/transitionoperation","title":"NavigationTransition.TransitionOperation","type":"typealias"}],"path":"\/documentation\/navigationtransitions\/navigationtransition","title":"NavigationTransition","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/primitivenavigationtransition\/transition(with:for:in:)","title":"func transition(with: Animator, for: Self.TransitionOperation, in: Self.Context)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/primitivenavigationtransition\/context","title":"PrimitiveNavigationTransition.Context","type":"typealias"},{"path":"\/documentation\/navigationtransitions\/primitivenavigationtransition\/transitionoperation","title":"PrimitiveNavigationTransition.TransitionOperation","type":"typealias"}],"path":"\/documentation\/navigationtransitions\/primitivenavigationtransition","title":"PrimitiveNavigationTransition","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/animation\/speed(_:)","title":"func speed(Double) -> Animation","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/animation\/default","title":"static var `default`: Animation","type":"property"},{"path":"\/documentation\/navigationtransitions\/animation\/easein","title":"static var easeIn: Animation","type":"property"},{"path":"\/documentation\/navigationtransitions\/animation\/easeinout","title":"static var easeInOut: Animation","type":"property"},{"path":"\/documentation\/navigationtransitions\/animation\/easeout","title":"static var easeOut: Animation","type":"property"},{"path":"\/documentation\/navigationtransitions\/animation\/linear","title":"static var linear: Animation","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/animation\/easein(duration:)","title":"static func easeIn(duration: Double) -> Animation","type":"method"},{"path":"\/documentation\/navigationtransitions\/animation\/easeinout(duration:)","title":"static func easeInOut(duration: Double) -> Animation","type":"method"},{"path":"\/documentation\/navigationtransitions\/animation\/easeout(duration:)","title":"static func easeOut(duration: Double) -> Animation","type":"method"},{"path":"\/documentation\/navigationtransitions\/animation\/interpolatingspring(mass:stiffness:damping:initialvelocity:)","title":"static func interpolatingSpring(mass: Double, stiffness: Double, damping: Double, initialVelocity: Double) -> Animation","type":"method"},{"path":"\/documentation\/navigationtransitions\/animation\/linear(duration:)","title":"static func linear(duration: Double) -> Animation","type":"method"},{"path":"\/documentation\/navigationtransitions\/animation\/timingcurve(_:_:_:_:)","title":"static func timingCurve(Double, Double, Double, Double) -> Animation","type":"method"},{"path":"\/documentation\/navigationtransitions\/animation\/timingcurve(_:_:_:_:duration:)","title":"static func timingCurve(Double, Double, Double, Double, duration: Double) -> Animation","type":"method"}],"path":"\/documentation\/navigationtransitions\/animation","title":"Animation","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/animatortransientviewproperties\/alpha","title":"var alpha: CGFloat","type":"property"},{"path":"\/documentation\/navigationtransitions\/animatortransientviewproperties\/rotation","title":"var rotation: CGFloat","type":"property"},{"path":"\/documentation\/navigationtransitions\/animatortransientviewproperties\/scale","title":"var scale: CGSize","type":"property"},{"path":"\/documentation\/navigationtransitions\/animatortransientviewproperties\/transform","title":"var transform: CGAffineTransform","type":"property"},{"path":"\/documentation\/navigationtransitions\/animatortransientviewproperties\/translation","title":"var translation: CGVector","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/animatortransientviewproperties\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/animatortransientviewproperties\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/animatortransientviewproperties","title":"AnimatorTransientViewProperties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/init(_:)-4i6nc","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/init(_:)-80884","title":"init<T>(T)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/animation(_:)","title":"func animation(AnyNavigationTransition.Animation) -> AnyNavigationTransition","type":"method"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/combined(with:)","title":"func combined(with: AnyNavigationTransition) -> AnyNavigationTransition","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/animation","title":"AnyNavigationTransition.Animation","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/default","title":"static var `default`: AnyNavigationTransition","type":"property"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/slide","title":"static var slide: AnyNavigationTransition","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/fade(_:)","title":"static func fade(Fade.Style) -> AnyNavigationTransition","type":"method"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/slide(axis:)","title":"static func slide(axis: Axis) -> AnyNavigationTransition","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/edgepan","title":"case edgePan","type":"case"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/pan","title":"case pan","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/default","title":"static var `default`: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity","title":"AnyNavigationTransition.Interactivity","type":"enum"}],"path":"\/documentation\/navigationtransitions\/anynavigationtransition","title":"AnyNavigationTransition","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/atomictransitionbuilder\/buildblock()","title":"static func buildBlock() -> Identity","type":"method"},{"path":"\/documentation\/navigationtransitions\/atomictransitionbuilder\/buildeither(first:)","title":"static func buildEither<TrueTransition, FalseTransition>(first: TrueTransition) -> _ConditionalTransition<TrueTransition, FalseTransition>","type":"method"},{"path":"\/documentation\/navigationtransitions\/atomictransitionbuilder\/buildeither(second:)","title":"static func buildEither<TrueTransition, FalseTransition>(second: FalseTransition) -> _ConditionalTransition<TrueTransition, FalseTransition>","type":"method"},{"path":"\/documentation\/navigationtransitions\/atomictransitionbuilder\/buildoptional(_:)","title":"static func buildOptional<T>(T?) -> _OptionalTransition<T>","type":"method"},{"path":"\/documentation\/navigationtransitions\/atomictransitionbuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<T1, T2>(accumulated: T1, next: T2) -> Combined<T1, T2>","type":"method"},{"path":"\/documentation\/navigationtransitions\/atomictransitionbuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<T1>(first: T1) -> T1","type":"method"}],"path":"\/documentation\/navigationtransitions\/atomictransitionbuilder","title":"AtomicTransitionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/bringtofront\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/bringtofront\/transition(_:for:in:)","title":"func transition(BringToFront.TransientView, for: BringToFront.TransitionOperation, in: BringToFront.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/bringtofront\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/bringtofront\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/bringtofront","title":"BringToFront","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined-3w9us\/init(transitions:)-2i3dc","title":"init(transitions: () -> Combined<TransitionA, TransitionB>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined-3w9us\/transition(_:for:in:)","title":"func transition(Combined<TransitionA, TransitionB>.TransientView, for: Combined<TransitionA, TransitionB>.TransitionOperation, in: Combined<TransitionA, TransitionB>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined-3w9us\/!=(_:_:)-2u99i","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/combined-3w9us\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined-3w9us\/mirrored()","title":"func mirrored() -> Combined<TransitionA.Mirrored, TransitionB.Mirrored>","type":"method"}],"path":"\/documentation\/navigationtransitions\/combined-3w9us\/mirrorableatomictransition-implementations","title":"MirrorableAtomicTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/combined-3w9us","title":"Combined","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined-5oi5r\/init(transitions:)-7ix87","title":"init(transitions: () -> Combined<TransitionA, TransitionB>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined-5oi5r\/transition(from:to:for:in:)","title":"func transition(from: Combined<TransitionA, TransitionB>.TransientView, to: Combined<TransitionA, TransitionB>.TransientView, for: Combined<TransitionA, TransitionB>.TransitionOperation, in: Combined<TransitionA, TransitionB>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined-5oi5r\/!=(_:_:)-7t2g8","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/combined-5oi5r\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined-5oi5r\/body","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/navigationtransitions\/combined-5oi5r\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/combined-5oi5r","title":"Combined","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/init(_:)","title":"init(Fade.Style)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/body-5l2bk","title":"var body: some NavigationTransition","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/style\/cross","title":"case cross","type":"case"},{"path":"\/documentation\/navigationtransitions\/fade\/style\/in","title":"case `in`","type":"case"},{"path":"\/documentation\/navigationtransitions\/fade\/style\/out","title":"case out","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/style\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/fade\/style\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/fade\/style","title":"Fade.Style","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/fade\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/body-3yex0","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/transition(from:to:for:in:)","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"}],"path":"\/documentation\/navigationtransitions\/fade\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/fade","title":"Fade","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/group\/init(_:)","title":"init(() -> Transitions)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/group\/transition(_:for:in:)","title":"func transition(Group<Transitions>.TransientView, for: Group<Transitions>.TransitionOperation, in: Group<Transitions>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/group\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/group\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/group\/mirrored()","title":"func mirrored() -> Group<Transitions.Mirrored>","type":"method"}],"path":"\/documentation\/navigationtransitions\/group\/mirrorableatomictransition-implementations","title":"MirrorableAtomicTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/group","title":"Group","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/identity\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/identity\/mirrored()","title":"func mirrored() -> Identity","type":"method"},{"path":"\/documentation\/navigationtransitions\/identity\/transition(_:for:in:)","title":"func transition(Identity.TransientView, for: Identity.TransitionOperation, in: Identity.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/identity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/identity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/identity","title":"Identity","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorinsertion\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorinsertion\/transition(_:for:in:)","title":"func transition(MirrorInsertion<Transition>.TransientView, for: MirrorInsertion<Transition>.TransitionOperation, in: MirrorInsertion<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorinsertion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/mirrorinsertion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorinsertion\/mirrored()","title":"func mirrored() -> MirrorRemoval<Transition>","type":"method"}],"path":"\/documentation\/navigationtransitions\/mirrorinsertion\/mirrorableatomictransition-implementations","title":"MirrorableAtomicTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/mirrorinsertion","title":"MirrorInsertion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpop\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpop\/body-4k85v","title":"var body: some NavigationTransition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/mirrorpop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpop\/body-8pqmb","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpop\/transition(from:to:for:in:)","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"}],"path":"\/documentation\/navigationtransitions\/mirrorpop\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/mirrorpop","title":"MirrorPop","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpush\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpush\/body-2n2xj","title":"var body: some NavigationTransition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpush\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/mirrorpush\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpush\/body-2alcb","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpush\/transition(from:to:for:in:)","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"}],"path":"\/documentation\/navigationtransitions\/mirrorpush\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/mirrorpush","title":"MirrorPush","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorremoval\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorremoval\/transition(_:for:in:)","title":"func transition(MirrorRemoval<Transition>.TransientView, for: MirrorRemoval<Transition>.TransitionOperation, in: MirrorRemoval<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorremoval\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/mirrorremoval\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorremoval\/mirrored()","title":"func mirrored() -> MirrorInsertion<Transition>","type":"method"}],"path":"\/documentation\/navigationtransitions\/mirrorremoval\/mirrorableatomictransition-implementations","title":"MirrorableAtomicTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/mirrorremoval","title":"MirrorRemoval","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/move\/init(edge:)","title":"init(edge: Edge)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/move\/mirrored()","title":"func mirrored() -> Move","type":"method"},{"path":"\/documentation\/navigationtransitions\/move\/transition(_:for:in:)","title":"func transition(Move.TransientView, for: Move.TransitionOperation, in: Move.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/move\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/move\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/move","title":"Move","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/init(rawvalue:)","title":"init(rawValue: Int8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/rawvalue","title":"let rawValue: Int8","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/all","title":"static let all: `Self`","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/compact","title":"static let compact: NavigationSplitViewColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/content","title":"static let content: NavigationSplitViewColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/detail","title":"static let detail: NavigationSplitViewColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/sidebar","title":"static let sidebar: NavigationSplitViewColumns","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns","title":"NavigationSplitViewColumns","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder\/buildeither(first:)","title":"static func buildEither<TrueTransition, FalseTransition>(first: TrueTransition) -> _ConditionalTransition<TrueTransition, FalseTransition>","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder\/buildeither(second:)","title":"static func buildEither<TrueTransition, FalseTransition>(second: FalseTransition) -> _ConditionalTransition<TrueTransition, FalseTransition>","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder\/buildoptional(_:)","title":"static func buildOptional<T>(T?) -> _OptionalTransition<T>","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<T1, T2>(accumulated: T1, next: T2) -> Combined<T1, T2>","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<T1>(first: T1) -> T1","type":"method"}],"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder","title":"NavigationTransitionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/init(rawvalue:)","title":"init(rawValue: Int8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/rawvalue","title":"let rawValue: Int8","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/all","title":"static let all: `Self`","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/detail","title":"static let detail: NavigationViewColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/sidebar","title":"static let sidebar: NavigationViewColumns","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/navigationviewcolumns","title":"NavigationViewColumns","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/offset\/init(_:)","title":"init(CGSize)","type":"init"},{"path":"\/documentation\/navigationtransitions\/offset\/init(x:)","title":"init(x: CGFloat)","type":"init"},{"path":"\/documentation\/navigationtransitions\/offset\/init(x:y:)","title":"init(x: CGFloat, y: CGFloat)","type":"init"},{"path":"\/documentation\/navigationtransitions\/offset\/init(y:)","title":"init(y: CGFloat)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/offset\/mirrored()","title":"func mirrored() -> Offset","type":"method"},{"path":"\/documentation\/navigationtransitions\/offset\/transition(_:for:in:)","title":"func transition(Offset.TransientView, for: Offset.TransitionOperation, in: Offset.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/offset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/offset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/offset","title":"Offset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/oninsertion\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/oninsertion\/transition(_:for:in:)","title":"func transition(OnInsertion<Transition>.TransientView, for: OnInsertion<Transition>.TransitionOperation, in: OnInsertion<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/oninsertion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/oninsertion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/oninsertion\/mirrored()","title":"func mirrored() -> OnInsertion<Transition.Mirrored>","type":"method"}],"path":"\/documentation\/navigationtransitions\/oninsertion\/mirrorableatomictransition-implementations","title":"MirrorableAtomicTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/oninsertion","title":"OnInsertion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpop\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpop\/transition(from:to:for:in:)","title":"func transition(from: OnPop<Transition>.TransientView, to: OnPop<Transition>.TransientView, for: OnPop<Transition>.TransitionOperation, in: OnPop<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/onpop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpop\/body","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/navigationtransitions\/onpop\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/onpop","title":"OnPop","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpush\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpush\/transition(from:to:for:in:)","title":"func transition(from: OnPush<Transition>.TransientView, to: OnPush<Transition>.TransientView, for: OnPush<Transition>.TransitionOperation, in: OnPush<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpush\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/onpush\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpush\/body","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/navigationtransitions\/onpush\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/onpush","title":"OnPush","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onremoval\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onremoval\/transition(_:for:in:)","title":"func transition(OnRemoval<Transition>.TransientView, for: OnRemoval<Transition>.TransitionOperation, in: OnRemoval<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onremoval\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/onremoval\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onremoval\/mirrored()","title":"func mirrored() -> OnRemoval<Transition.Mirrored>","type":"method"}],"path":"\/documentation\/navigationtransitions\/onremoval\/mirrorableatomictransition-implementations","title":"MirrorableAtomicTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/onremoval","title":"OnRemoval","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/opacity\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/opacity\/mirrored()","title":"func mirrored() -> Opacity","type":"method"},{"path":"\/documentation\/navigationtransitions\/opacity\/transition(_:for:in:)","title":"func transition(Opacity.TransientView, for: Opacity.TransitionOperation, in: Opacity.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/opacity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/opacity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/opacity","title":"Opacity","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/optionalwithdefault\/init(wrappedvalue:)","title":"init(wrappedValue: Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/optionalwithdefault\/projectedvalue","title":"var projectedValue: Value?","type":"property"},{"path":"\/documentation\/navigationtransitions\/optionalwithdefault\/wrappedvalue","title":"var wrappedValue: Value","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/optionalwithdefault\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/optionalwithdefault\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/optionalwithdefault","title":"OptionalWithDefault","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpop\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpop\/transition(from:to:for:in:)","title":"func transition(from: PickPop<Transition>.TransientView, to: PickPop<Transition>.TransientView, for: PickPop<Transition>.TransitionOperation, in: PickPop<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/pickpop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpop\/body","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/navigationtransitions\/pickpop\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/pickpop","title":"PickPop","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpush\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpush\/transition(from:to:for:in:)","title":"func transition(from: PickPush<Transition>.TransientView, to: PickPush<Transition>.TransientView, for: PickPush<Transition>.TransitionOperation, in: PickPush<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpush\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/pickpush\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpush\/body","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/navigationtransitions\/pickpush\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/pickpush","title":"PickPush","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/rotate\/init(_:)","title":"init(Angle)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/rotate\/mirrored()","title":"func mirrored() -> Rotate","type":"method"},{"path":"\/documentation\/navigationtransitions\/rotate\/transition(_:for:in:)","title":"func transition(Rotate.TransientView, for: Rotate.TransitionOperation, in: Rotate.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/rotate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/rotate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/rotate","title":"Rotate","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/scale\/init()","title":"init()","type":"init"},{"path":"\/documentation\/navigationtransitions\/scale\/init(_:)","title":"init(CGFloat)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/scale\/mirrored()","title":"func mirrored() -> Scale","type":"method"},{"path":"\/documentation\/navigationtransitions\/scale\/transition(_:for:in:)","title":"func transition(Scale.TransientView, for: Scale.TransitionOperation, in: Scale.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/scale\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/scale\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/scale","title":"Scale","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/sendtoback\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/sendtoback\/transition(_:for:in:)","title":"func transition(SendToBack.TransientView, for: SendToBack.TransitionOperation, in: SendToBack.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/sendtoback\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/sendtoback\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/sendtoback","title":"SendToBack","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/slide\/init()","title":"init()","type":"init"},{"path":"\/documentation\/navigationtransitions\/slide\/init(axis:)","title":"init(axis: Axis)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/slide\/body-2fwd6","title":"var body: some NavigationTransition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/slide\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/slide\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/slide\/body-5dvqi","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/slide\/transition(from:to:for:in:)","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"}],"path":"\/documentation\/navigationtransitions\/slide\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/slide","title":"Slide","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/init(rawvalue:)","title":"init(rawValue: Int8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/rawvalue","title":"let rawValue: Int8","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/all","title":"static let all: `Self`","type":"property"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/compact","title":"static let compact: UISplitViewControllerColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/primary","title":"static let primary: UISplitViewControllerColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/secondary","title":"static let secondary: UISplitViewControllerColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/supplementary","title":"static let supplementary: UISplitViewControllerColumns","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns","title":"UISplitViewControllerColumns","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/atomictransitionoperation\/insertion","title":"case insertion","type":"case"},{"path":"\/documentation\/navigationtransitions\/atomictransitionoperation\/removal","title":"case removal","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/atomictransitionoperation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/atomictransitionoperation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/atomictransitionoperation","title":"AtomicTransitionOperation","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionoperation\/pop","title":"case pop","type":"case"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionoperation\/push","title":"case push","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionoperation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/navigationtransitionoperation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/navigationtransitionoperation","title":"NavigationTransitionOperation","type":"enum"}],"path":"\/documentation\/navigationtransitions","title":"NavigationTransitions","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}