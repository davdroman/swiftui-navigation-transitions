{"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/navigationtransitions\/navigationtransition\/body-swift.property-5rq1z","title":"var body: Self.Body","type":"property"}],"title":"NavigationTransition Implementations","type":"groupMarker"}],"path":"\/documentation\/navigationtransitions\/navigationtransition\/body-swift.property-76amf","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/navigationtransitions\/navigationtransition\/transition(from:to:for:in:)-22zdm","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"}],"title":"NavigationTransition Implementations","type":"groupMarker"}],"path":"\/documentation\/navigationtransitions\/navigationtransition\/transition(from:to:for:in:)-211yh","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationtransition\/body-swift.typealias","title":"NavigationTransition.Body","type":"typealias"},{"path":"\/documentation\/navigationtransitions\/navigationtransition\/container","title":"NavigationTransition.Container","type":"typealias"},{"path":"\/documentation\/navigationtransitions\/navigationtransition\/transientview","title":"NavigationTransition.TransientView","type":"typealias"},{"path":"\/documentation\/navigationtransitions\/navigationtransition\/transitionoperation","title":"NavigationTransition.TransitionOperation","type":"typealias"}],"path":"\/documentation\/navigationtransitions\/navigationtransition","title":"NavigationTransition","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/primitivenavigationtransition\/transition(with:for:in:)","title":"func transition(with: Animator, for: Self.TransitionOperation, in: Self.Context)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/primitivenavigationtransition\/context","title":"PrimitiveNavigationTransition.Context","type":"typealias"},{"path":"\/documentation\/navigationtransitions\/primitivenavigationtransition\/transitionoperation","title":"PrimitiveNavigationTransition.TransitionOperation","type":"typealias"}],"path":"\/documentation\/navigationtransitions\/primitivenavigationtransition","title":"PrimitiveNavigationTransition","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/init(_:)-4i6nc","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/init(_:)-80884","title":"init<T>(T)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/animation(_:)","title":"func animation(AnyNavigationTransition.Animation) -> AnyNavigationTransition","type":"method"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/combined(with:)","title":"func combined(with: AnyNavigationTransition) -> AnyNavigationTransition","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/animation","title":"AnyNavigationTransition.Animation","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/default","title":"static var `default`: AnyNavigationTransition","type":"property"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/slide","title":"static var slide: AnyNavigationTransition","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/fade(_:)","title":"static func fade(Fade.Style) -> AnyNavigationTransition","type":"method"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/slide(axis:)","title":"static func slide(axis: Axis) -> AnyNavigationTransition","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/edgepan","title":"case edgePan","type":"case"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/pan","title":"case pan","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/default","title":"static var `default`: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/anynavigationtransition\/interactivity","title":"AnyNavigationTransition.Interactivity","type":"enum"}],"path":"\/documentation\/navigationtransitions\/anynavigationtransition","title":"AnyNavigationTransition","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined\/init(transitions:)","title":"init(transitions: () -> Combined<TransitionA, TransitionB>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined\/transition(from:to:for:in:)","title":"func transition(from: Combined<TransitionA, TransitionB>.TransientView, to: Combined<TransitionA, TransitionB>.TransientView, for: Combined<TransitionA, TransitionB>.TransitionOperation, in: Combined<TransitionA, TransitionB>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/combined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/combined\/body","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/navigationtransitions\/combined\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/combined","title":"Combined","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/init(_:)","title":"init(Fade.Style)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/body-5l2bk","title":"var body: some NavigationTransition","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/style\/cross","title":"case cross","type":"case"},{"path":"\/documentation\/navigationtransitions\/fade\/style\/in","title":"case `in`","type":"case"},{"path":"\/documentation\/navigationtransitions\/fade\/style\/out","title":"case out","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/style\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/fade\/style\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/fade\/style","title":"Fade.Style","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/fade\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/body-3yex0","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/fade\/transition(from:to:for:in:)","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"}],"path":"\/documentation\/navigationtransitions\/fade\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/fade","title":"Fade","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpop\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpop\/body-4k85v","title":"var body: some NavigationTransition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/mirrorpop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpop\/body-8pqmb","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpop\/transition(from:to:for:in:)","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"}],"path":"\/documentation\/navigationtransitions\/mirrorpop\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/mirrorpop","title":"MirrorPop","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpush\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpush\/body-2n2xj","title":"var body: some NavigationTransition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpush\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/mirrorpush\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpush\/body-2alcb","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/mirrorpush\/transition(from:to:for:in:)","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"}],"path":"\/documentation\/navigationtransitions\/mirrorpush\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/mirrorpush","title":"MirrorPush","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/init(rawvalue:)","title":"init(rawValue: Int8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/rawvalue","title":"let rawValue: Int8","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/all","title":"static let all: `Self`","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/compact","title":"static let compact: NavigationSplitViewColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/content","title":"static let content: NavigationSplitViewColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/detail","title":"static let detail: NavigationSplitViewColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/sidebar","title":"static let sidebar: NavigationSplitViewColumns","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/navigationsplitviewcolumns","title":"NavigationSplitViewColumns","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder\/buildeither(first:)","title":"static func buildEither<TrueTransition, FalseTransition>(first: TrueTransition) -> _ConditionalTransition<TrueTransition, FalseTransition>","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder\/buildeither(second:)","title":"static func buildEither<TrueTransition, FalseTransition>(second: FalseTransition) -> _ConditionalTransition<TrueTransition, FalseTransition>","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder\/buildoptional(_:)","title":"static func buildOptional<T>(T?) -> _OptionalTransition<T>","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<T1, T2>(accumulated: T1, next: T2) -> Combined<T1, T2>","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<T1>(first: T1) -> T1","type":"method"}],"path":"\/documentation\/navigationtransitions\/navigationtransitionbuilder","title":"NavigationTransitionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/init(rawvalue:)","title":"init(rawValue: Int8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/rawvalue","title":"let rawValue: Int8","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/all","title":"static let all: `Self`","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/detail","title":"static let detail: NavigationViewColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/sidebar","title":"static let sidebar: NavigationViewColumns","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/navigationtransitions\/navigationviewcolumns\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/navigationviewcolumns","title":"NavigationViewColumns","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpop\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpop\/transition(from:to:for:in:)","title":"func transition(from: OnPop<Transition>.TransientView, to: OnPop<Transition>.TransientView, for: OnPop<Transition>.TransitionOperation, in: OnPop<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/onpop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpop\/body","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/navigationtransitions\/onpop\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/onpop","title":"OnPop","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpush\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpush\/transition(from:to:for:in:)","title":"func transition(from: OnPush<Transition>.TransientView, to: OnPush<Transition>.TransientView, for: OnPush<Transition>.TransitionOperation, in: OnPush<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpush\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/onpush\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/onpush\/body","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/navigationtransitions\/onpush\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/onpush","title":"OnPush","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpop\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpop\/transition(from:to:for:in:)","title":"func transition(from: PickPop<Transition>.TransientView, to: PickPop<Transition>.TransientView, for: PickPop<Transition>.TransitionOperation, in: PickPop<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/pickpop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpop\/body","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/navigationtransitions\/pickpop\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/pickpop","title":"PickPop","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpush\/init(transition:)","title":"init(transition: () -> Transition)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpush\/transition(from:to:for:in:)","title":"func transition(from: PickPush<Transition>.TransientView, to: PickPush<Transition>.TransientView, for: PickPush<Transition>.TransitionOperation, in: PickPush<Transition>.Container)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpush\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/pickpush\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/pickpush\/body","title":"var body: Self.Body","type":"property"}],"path":"\/documentation\/navigationtransitions\/pickpush\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/pickpush","title":"PickPush","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/slide\/init()","title":"init()","type":"init"},{"path":"\/documentation\/navigationtransitions\/slide\/init(axis:)","title":"init(axis: Axis)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/slide\/body-2fwd6","title":"var body: some NavigationTransition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/slide\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/slide\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/slide\/body-5dvqi","title":"var body: Self.Body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/slide\/transition(from:to:for:in:)","title":"func transition(from: Self.TransientView, to: Self.TransientView, for: Self.TransitionOperation, in: Self.Container)","type":"method"}],"path":"\/documentation\/navigationtransitions\/slide\/navigationtransition-implementations","title":"NavigationTransition Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/slide","title":"Slide","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/init(rawvalue:)","title":"init(rawValue: Int8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/rawvalue","title":"let rawValue: Int8","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/all","title":"static let all: `Self`","type":"property"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/compact","title":"static let compact: UISplitViewControllerColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/primary","title":"static let primary: UISplitViewControllerColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/secondary","title":"static let secondary: UISplitViewControllerColumns","type":"property"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/supplementary","title":"static let supplementary: UISplitViewControllerColumns","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/uisplitviewcontrollercolumns","title":"UISplitViewControllerColumns","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionoperation\/pop","title":"case pop","type":"case"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionoperation\/push","title":"case push","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/navigationtransitions\/navigationtransitionoperation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/navigationtransitions\/navigationtransitionoperation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/navigationtransitions\/navigationtransitionoperation","title":"NavigationTransitionOperation","type":"enum"}],"path":"\/documentation\/navigationtransitions","title":"NavigationTransitions","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}